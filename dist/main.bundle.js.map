{"version":3,"sources":["webpack:///./src/app/dashboard/dashboard-component-rss.ts","webpack:///./src/app/feed.service.ts","webpack:///./src/app/shared/simple-dialog/dialog.service.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard-component-outlet.ts","webpack:///./src/app/dashboard/dashboard.ts","webpack:///./src/app/pipe/strip-html-tags.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.css"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { DashboardComponent } from './dashboard-component';\r\nimport { FeedService } from '../feed.service';\r\nimport { FeedInfo } from '../model/feed-info';\r\nimport { FeedEntry } from '../model/feed-entry';\r\nimport { FeedEnclosure } from '../model/feed-enclosure';\r\n\r\nimport { DialogService } from '../shared/simple-dialog/dialog.service';\r\n\r\n@Component({\r\n  selector: 'component-rss',\r\n  template: `\r\n      <md-card masonry-brick style=\"min-width: 280px; max-width: 320px; margin: 5px;\">\r\n        <md-card-header *ngIf=\"items.length\">\r\n          <div md-card-avatar *ngIf=\"feed.image!=''\"><img src=\"{{feed.image}}\" style=\"width: 30px;\"/></div>\r\n          <md-card-title>{{feed.title}} <font color=\"red\">|</font> {{feed.author}}</md-card-title>\r\n          <md-card-subtitle>{{feed.description}} </md-card-subtitle>\r\n        </md-card-header>\r\n        <md-card-content *ngIf=\"!items.length\">\r\n          <md-spinner style=\"margin-bottom: 10px;\"></md-spinner>              \r\n          Loading data from... {{end_point}}\r\n        </md-card-content>\r\n        <md-card-content *ngIf=\"items.length\">\r\n          <md-list-item *ngFor=\"let item of items\">         \r\n            <button md-icon-button (click)=\"openDialog(item)\" mdTooltip=\"Play Audio\">\r\n              <md-icon>info</md-icon>\r\n            </button>\r\n            <button mdTooltip=\"View Description\" md-icon-button *ngIf=\"item.enclosure.type != null\" (click)=\"onPlay(item.enclosure)\">\r\n              <md-icon>play_circle_filled</md-icon>\r\n            </button>            \r\n            {{item.title}}             \r\n          </md-list-item>\r\n        </md-card-content>\r\n        <md-card-actions style=\"text-align: right;\">\r\n          <button md-mini-fab (click)='onOpenLink()' mdTooltip=\"Open in New Window\" mdTooltipPosition=\"above\">\r\n            <md-icon>open_in_new</md-icon>\r\n          </button>\r\n          <button md-mini-fab (click)='onPullData()' mdTooltip=\"Refresh\" mdTooltipPosition=\"above\">\r\n            <md-icon>refresh</md-icon>\r\n          </button>\r\n        </md-card-actions>\r\n      </md-card>\r\n      `\r\n})\r\n\r\nexport class DashboardComponentRss implements DashboardComponent {\r\n\r\n  private feed: any = {};\r\n  private items: any = [];\r\n\r\n  @Input() title: string;\r\n  @Input() end_point: string;\r\n  @Input() count: number;\r\n\r\n  @Output() selected = new EventEmitter();\r\n\r\n  constructor(\r\n    private feedService: FeedService,\r\n    private dialogService: DialogService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.onPullData();\r\n  }\r\n\r\n  onPullData() {\r\n    this.feedService.getFeedContent(this.end_point)\r\n      .delay(1000)\r\n      .subscribe(\r\n      result => {\r\n        console.log(result.items);\r\n        this.feed = result.feed,\r\n        this.items = result.items.filter((item, index) => { return index < this.count; });\r\n      },\r\n      error => console.log(error)\r\n      );\r\n  }\r\n\r\n  openDialog(feedEntry: FeedEntry) {\r\n    console.log(feedEntry);\r\n    var title = feedEntry.title + \" | \" + feedEntry.pubDate;\r\n    this.dialogService.confirm(title, feedEntry.description);\r\n  }\r\n\r\n  onPlay(enclosure: FeedEnclosure){\r\n    console.log(enclosure.link);\r\n  }\r\n\r\n  onSelected() {\r\n    this.selected.emit(this);\r\n  }\r\n\r\n  onOpenLink() {\r\n    window.open(this.feed.link, '_blank');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard-component-rss.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Feed } from './model/feed';\r\n\r\n@Injectable()\r\nexport class FeedService {\r\n\r\n  private rssToJsonServiceBaseUrl: string = 'https://rss2json.com/api.json?rss_url=';\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  getFeedContent(url: string): Observable<Feed> {\r\n    return this.http.get(this.rssToJsonServiceBaseUrl + url)\r\n      .map(this.extractFeeds)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private extractFeeds(res: Response): Feed {\r\n    let feed = res.json();\r\n    return feed || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    // We'd also dig deeper into the error to get a better message\r\n    let errMsg = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    console.error(errMsg); // log to console instead\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/feed.service.ts","import { Observable } from 'rxjs/Rx';\r\nimport { SimpleDialogComponent } from './simple-dialog.component';\r\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n\r\n    constructor(private dialog: MdDialog) { }\r\n\r\n    public confirm(title: string, message: string): Observable<boolean> {\r\n\r\n        let dialogRef: MdDialogRef<SimpleDialogComponent>;\r\n\r\n        dialogRef = this.dialog.open(SimpleDialogComponent);\r\n        dialogRef.componentInstance.title = title;\r\n        dialogRef.componentInstance.message = message;\r\n\r\n        return dialogRef.afterClosed();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/dialog.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { MdDialog, MdDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-simple-dialog',\r\n  template: `\r\n      <h2 md-dialog-title>{{title}}</h2>\r\n      <md-dialog-content [innerHtml]=message></md-dialog-content>\r\n  `,\r\n  styleUrls: ['./simple-dialog.component.css']\r\n})\r\nexport class SimpleDialogComponent implements OnInit {\r\n\r\n  public message: string;\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MdDialogRef<SimpleDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/simple-dialog.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 176;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 176\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `\r\n        <md-toolbar style=\"background-color: black;\">\r\n          <span style=\"color: white;\">\r\n          <a href=\"\\\">\r\n          <img \r\n            src=\"/assets/borntolearnwild.png\" \r\n            style=\"margin-right: 10px; width:30px; height: 30px;\" \r\n            alt=\"Learn Wild | Not every site can become a great source of knowledge; but a great source of knowledge *can* come from any site.\">\r\n        </a>\r\n          </span>\r\n          <span class=\"example-spacer\"></span>\r\n          <!--<md-icon class=\"example-icon\" style=\"color: white;\">account_circle</md-icon>\r\n          <md-icon class=\"example-icon\" style=\"color: white;\">delete</md-icon>-->\r\n        </md-toolbar>\r\n        <div style=\"margin-top:5px;\">   \r\n            <dashboard></dashboard>\r\n        </div>        \r\n    `\r\n})\r\n\r\nexport class AppComponent {\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MasonryModule } from 'angular2-masonry';\r\n\r\nimport { Dashboard } from './dashboard/dashboard';\r\nimport { DashboardComponentRss } from './dashboard/dashboard-component-rss';\r\nimport { DashboardComponentOutlet } from './dashboard/dashboard-component-outlet';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// import { FeedCardComponent } from './feed-card/feed-card.component';\r\nimport { FeedService } from './feed.service';\r\nimport { DialogService} from './shared/simple-dialog/dialog.service';\r\n\r\n// shared\r\nimport { StripHtmlTagsPipe } from './pipe/strip-html-tags.pipe';\r\nimport { SimpleDialogComponent } from './shared/simple-dialog/simple-dialog.component';\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    Dashboard,\r\n    DashboardComponentOutlet,\r\n    DashboardComponentRss,\r\n    //FeedCardComponent,\r\n    StripHtmlTagsPipe,\r\n    SimpleDialogComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MasonryModule,\r\n\r\n    MaterialModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule\r\n  ],\r\n\r\n  providers: [\r\n    FeedService,\r\n    DialogService\r\n  ],\r\n\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n\r\n  entryComponents: [\r\n      DashboardComponentRss,\r\n      SimpleDialogComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {\r\n    Component,\r\n    ViewContainerRef,\r\n    ComponentFactoryResolver,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnChanges\r\n} from '@angular/core';\r\n\r\nimport { DashboardComponent } from './dashboard-component';\r\n\r\n@Component({\r\n    selector: 'dashboard-component-outlet',\r\n    template: ''\r\n})\r\nexport class DashboardComponentOutlet implements DashboardComponent, OnChanges {\r\n\r\n    @Input() title: string;\r\n    @Input() end_point: string;\r\n    @Input() count: number;\r\n    @Output() selected = new EventEmitter();\r\n    @Input() type;\r\n\r\n    private dynamicInstance: DashboardComponent;\r\n\r\n    constructor(private viewContainer: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n\r\n        if (changes.type) {\r\n            this.viewContainer.clear();\r\n\r\n            // Create Component\r\n            let factory = this.componentFactoryResolver.resolveComponentFactory(this.type);\r\n            let componentRef = this.viewContainer.createComponent(factory);\r\n            this.dynamicInstance = componentRef.instance as DashboardComponent;\r\n\r\n            // Set up Event-Handlers and delegate to own handlers\r\n            this.dynamicInstance.selected.subscribe(e => this.selected.emit(e));\r\n        }\r\n\r\n        // Delegate Properties\r\n        if (changes.title) {\r\n            this.dynamicInstance.title = this.title;\r\n            this.dynamicInstance.end_point = this.end_point;\r\n            this.dynamicInstance.count = this.count;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard-component-outlet.ts","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { DashboardComponentRss } from \"./dashboard-component-rss\";\r\nimport { AngularMasonry, MasonryOptions } from 'angular2-masonry';\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    template: `\r\n        <masonry style=\"margin: 0 auto;\">\r\n            <dashboard-component-outlet *ngFor=\"let info of componentInfos\"\r\n                [type]=\"info.type\" \r\n                [title]=\"info.title\" \r\n                [end_point]=\"info.end_point\"\r\n                [count]=\"info.count\"\r\n                (selected)=\"select($event)\">\r\n            </dashboard-component-outlet>\r\n        </masonry>\r\n        <div *ngIf=\"selectedComponent\" class=\"col-sm-12\">\r\n            <b>Selected: </b> {{ selectedComponent.title }} | {{ selectedComponent.end_point }} | {{ selectedComponent.count }}\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class Dashboard implements AfterViewInit{\r\n    @ViewChild(AngularMasonry) masonry: AngularMasonry;\r\n\r\n    options: MasonryOptions = {\r\n        transitionDuration: '0.35',\r\n        fitWidth: true,\r\n        gutter: 5,\r\n        percentPosition: true\r\n    };\r\n\r\n    ngAfterViewInit() {\r\n        this.masonry.layoutComplete.subscribe(() => {\r\n            console.log('masonry layout complete.');\r\n        });\r\n    }\r\n\r\n    private componentInfos = [\r\n        {\r\n            type: DashboardComponentRss,\r\n            title: '1st Component - Freakonomics',\r\n            end_point: 'http://feeds2.feedburner.com/freakonomicsradio',\r\n            count: 6\r\n        },\r\n        {\r\n            type: DashboardComponentRss,\r\n            title: '2nd Component - Channel 9',\r\n            end_point: 'https://channel9.msdn.com/all/rss',\r\n            count: 8\r\n        },\r\n        {\r\n            type: DashboardComponentRss,\r\n            title: '3rd Component - Ted Talks',\r\n            end_point: 'https://www.ted.com/talks/rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: DashboardComponentRss,\r\n            title: '4th Component - Adventures in Angular',\r\n            end_point: 'https://feeds.feedwrench.com/AdventuresInAngular.rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: DashboardComponentRss,\r\n            title: 'Scott Hanselman\\'s blog',\r\n            end_point: 'http://feeds.hanselman.com/scotthanselman',\r\n            count: 4\r\n        }\r\n        \r\n    ];\r\n\r\n    selectedComponent: Dashboard;\r\n\r\n    select(selected) {\r\n        this.selectedComponent = selected;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stripHtmlTags'\r\n})\r\nexport class StripHtmlTagsPipe implements PipeTransform {\r\n\r\n  private tagBody: string = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\r\n  private tagOrComment: RegExp = new RegExp(\r\n    '<(?:'\r\n    // Comment body.\r\n    + '!--(?:(?:-*[^->])*--+|-?)'\r\n    // Special \"raw text\" elements whose content should be elided.\r\n    + '|script\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</script\\\\s*'\r\n    + '|style\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\r\n    // Regular name\r\n    + '|/?[a-z]'\r\n    + this.tagBody\r\n    + ')>',\r\n    'gi');\r\n\r\n  transform(value: string): string {\r\n    let oldHtml;\r\n    do {\r\n      oldHtml = value;\r\n      value = value.replace(this.tagOrComment, '');\r\n    } while (value !== oldHtml);\r\n    return value.replace(/</g, '&lt;');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipe/strip-html-tags.pipe.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/simple-dialog/simple-dialog.component.css\n// module id = 262\n// module chunks = 1"],"sourceRoot":""}